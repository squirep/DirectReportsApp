@page "/delete"
@inject DirectReportsApp.Context.EmployeeDbContext DB
@using DirectReportsApp.Data
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Employee</h4>
    <hr />
    @if (employee is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">First Name</dt>
            <dd class="col-sm-10">@employee.FirstName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Last Name</dt>
            <dd class="col-sm-10">@employee.LastName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@employee.Address</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">City</dt>
            <dd class="col-sm-10">@employee.City</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">State</dt>
            <dd class="col-sm-10">@employee.State</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Country</dt>
            <dd class="col-sm-10">@employee.Country</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Job Title</dt>
            <dd class="col-sm-10">@employee.JobTitle</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Job Department</dt>
            <dd class="col-sm-10">@employee.JobDepartment</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Manager First Name</dt>
            <dd class="col-sm-10">@employee.ManagerFirstName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Manager Last Name</dt>
            <dd class="col-sm-10">@employee.ManagerLastName</dd>
        </dl>
        <EditForm method="post" Model="employee" OnValidSubmit="DeleteEmployee" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(employee is null)">Delete</button> |
            <a href="/">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Employee? employee;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        employee = await DB.Employees.FirstOrDefaultAsync(m => m.Id == Id);

        if (employee is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteEmployee()
    {
        DB.Employees.Remove(employee!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/");
    }
}
